// <auto-generated />
using CodeforcesTool.Entity;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace CodeforcesTool.Migrations
{
    [DbContext(typeof(CodeforcesContext))]
    [Migration("20190704001455_ratingAdded")]
    partial class ratingAdded
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.0-rtm-26452")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CodeforcesTool.Entity.Correlation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("User2Id");

                    b.Property<Guid>("UserId");

                    b.Property<double>("Value");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UserCorrelation");
                });

            modelBuilder.Entity("CodeforcesTool.Entity.Problem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Index");

                    b.Property<string>("Link");

                    b.Property<string>("Name");

                    b.Property<int>("Rating");

                    b.HasKey("Id");

                    b.ToTable("Problems");
                });

            modelBuilder.Entity("CodeforcesTool.Entity.ProblemTag", b =>
                {
                    b.Property<Guid>("ProblemId");

                    b.Property<Guid>("TagId");

                    b.HasKey("ProblemId", "TagId");

                    b.HasIndex("TagId");

                    b.ToTable("ProblemTags");
                });

            modelBuilder.Entity("CodeforcesTool.Entity.Tag", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Title");

                    b.HasKey("Id");

                    b.ToTable("Tags");
                });

            modelBuilder.Entity("CodeforcesTool.Entity.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Avatar");

                    b.Property<int>("Contribution");

                    b.Property<string>("Handle");

                    b.Property<string>("MaxRank");

                    b.Property<int>("MaxRating");

                    b.Property<string>("Name");

                    b.Property<string>("Rank");

                    b.Property<int>("Rating");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("CodeforcesTool.Entity.UserProblem", b =>
                {
                    b.Property<Guid>("UserId");

                    b.Property<Guid>("ProblemId");

                    b.Property<double>("Rating");

                    b.HasKey("UserId", "ProblemId");

                    b.HasIndex("ProblemId");

                    b.ToTable("UserProblems");
                });

            modelBuilder.Entity("CodeforcesTool.Entity.Correlation", b =>
                {
                    b.HasOne("CodeforcesTool.Entity.User")
                        .WithMany("Correlation")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("CodeforcesTool.Entity.ProblemTag", b =>
                {
                    b.HasOne("CodeforcesTool.Entity.Problem", "Problem")
                        .WithMany("ProblemTags")
                        .HasForeignKey("ProblemId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("CodeforcesTool.Entity.Tag", "Tag")
                        .WithMany("ProblemTags")
                        .HasForeignKey("TagId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("CodeforcesTool.Entity.UserProblem", b =>
                {
                    b.HasOne("CodeforcesTool.Entity.Problem", "Problem")
                        .WithMany("UserProblems")
                        .HasForeignKey("ProblemId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("CodeforcesTool.Entity.User", "User")
                        .WithMany("UserProblems")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
